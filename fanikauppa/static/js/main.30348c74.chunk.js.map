{"version":3,"sources":["components/products.js","components/productsdata.js","components/cart.js","components/confirm.js","components/result.js","App.js","serviceWorker.js","index.js"],"names":["Product","product","addProduct","className","name","description","releasedate","company","src","picture","onClick","id","amount","Products","products","setProducts","tempProducts","map","price","Cart","filtered","filter","total","reduce","a","b","tempAmount","removeAmount","Info","newInfo","setNewInfo","console","log","infoChangeHandler","event","field","tempInfo","target","value","type","onChange","e","email","phonenumber","adress","mnumber","mplace","Result","setShowInfo","setToZeros","App","useState","productslist","show","setShow","showcart","setShowCart","showInfo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.30348c74.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nconst Product = ({product, addProduct}) => {\r\n    return(\r\n        <div className=\"product1\">\r\n            <p> {product.name} {product.description}{product.releasedate} {product.company} </p> <img src= {product.picture}/> \r\n            <button onClick={()=>addProduct(product.id)}>Tilaa</button>\r\n            Tilaa: {product.amount}\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nconst Products = ({products, setProducts}) => {\r\n    const addProduct = (id) => {\r\n        const tempProducts = products.map(product => {\r\n            if (product.id === id) {\r\n                const tempProduct = {...product, amount: product.amount + 1};\r\n                return tempProduct;\r\n            } else {\r\n                return product;\r\n            }\r\n            \r\n        })\r\n        setProducts(tempProducts);\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n            {products.map(product => <Product product={product} addProduct={addProduct} />)} \r\n        </div>\r\n    )\r\n}\r\nexport {Product, Products}","export let products  = [\r\n    {   id: 1,\r\n        name:\"Warhammer\",\r\n        description: \"Single-player, multiplayer. Total War: Warhammer II is a turn-based strategy and real-time tactics video game developed by Creative Assembly and published by Sega. It is part of the Total War series and the sequel to 2016's Total War: Warhammer. The game is set in Games Workshop's Warhammer Fantasy fictional universe.\",\r\n        releasedate: \"28.9.2018\",\r\n        company: \"Creative assembly\",\r\n        picture:\"https://upload.wikimedia.org/wikipedia/en/7/70/Total_War_Warhammer_II_Cover_Image.jpg\",\r\n        amount: 0,\r\n        price: 50\r\n    },\r\n    {   id: 2,\r\n        name:\"League of Legends\",\r\n        description: \"League of Legends on Riot Gamesin kehittämä ja julkaisema taisteluareenamoninpeli, joka julkaistiin vuonna 2009 Microsoft Windowsille, ja myöhemmin vuonna 2013 OS X:lle. Peli on saanut inspiraationsa Warcraft III: The Frozen Throne -pelin moninpelikartasta Defense of the Ancients.\",\r\n        releasedate: \"27.10.2009\",\r\n        company: \"Riot Games\",\r\n        picture:\"https://images.contentstack.io/v3/assets/blt731acb42bb3d1659/bltcfa4652c8d383f56/5e21837f63d1b6503160d39b/Home-page.jpg\",\r\n        amount: 0,\r\n        price: 40\r\n    },\r\n]\r\n\r\nexport default products","import React, {useState} from 'react';\r\n\r\n\r\nconst Cart = ({products, setProducts}) => {\r\n//    const tempCart = products.map(product=>{product.name, product.amout, product.price})\r\n    const filtered = products.filter(product => product.amount != 0)\r\n//    setProducts(tempCart);\r\n    const amounts = products.map(product => product.amount * product.price);\r\n    const total = amounts.reduce((a, b) => a + b, 0);\r\n    const removeAmount = id => {\r\n        const tempAmount = products.map(product => {\r\n            if(product.id === id){\r\n                product = {...product, amount: (product.amount - 1)};\r\n            }\r\n            return product;\r\n        })\r\n        setProducts(tempAmount);\r\n    }\r\n\r\n\r\nreturn (\r\n    <div>\r\n        {filtered.map(product => <div>{product.name}, {product.amount}kpl, {product.amount * product.price}€, <button onClick={()=>removeAmount(product.id)}>Poista tilaus</button></div>)}\r\n        Yhteensä: {total}\r\n    </div>\r\n\r\n)\r\n}\r\n\r\nexport {Cart}","import React, {useState} from 'react';\r\n\r\nconst Info = ({newInfo, setNewInfo}) => {\r\n\r\nconsole.log(newInfo);\r\nconst infoChangeHandler = (event, field) => {\r\n    const tempInfo = {...newInfo};\r\n    tempInfo[field] = event.target.value;\r\n    setNewInfo(tempInfo);\r\n}\r\n\r\n\r\nreturn (\r\n\r\n<div>Anna nimi:<input type=\"text\" value={newInfo.name} className=\"info\" onChange={e=>infoChangeHandler(e, 'name')} />\r\nAnna sahkoposti:<input type=\"text\" value={newInfo.email} className=\"info\" onChange={e=>infoChangeHandler(e, 'email')} />\r\nAnna puhelinnumero:<input type=\"number\" value={newInfo.phonenumber} className=\"info\" onChange={e=>infoChangeHandler(e, 'phonenumber')} />\r\nAnna osoite:<input type=\"text\" value={newInfo.adress} className=\"info\" onChange={e=>infoChangeHandler(e, 'adress')} />\r\nAnna postinumero:<input type=\"number\" value={newInfo.mnumber} className=\"info\" onChange={e=>infoChangeHandler(e, 'mnumber')} />\r\nAnna postialue:<input type=\"text\" value={newInfo.mplace} className=\"info\" onChange={e=>infoChangeHandler(e, 'mplace')} />\r\n</div> ) }\r\n\r\n\r\n\r\nexport {Info}","import React, {useState} from 'react';\r\n\r\nconst Result = ({newInfo, setNewInfo, products, setProducts, total, setShowInfo}) => {\r\n    \r\n    const setToZeros = () => {\r\n        const tempProducts = products.map(product => {\r\n            product = {...product, amount: 0};\r\n            return product;\r\n        });\r\n        setProducts(tempProducts); \r\n        setNewInfo({\r\n            name: \"\",\r\n            email: \"\",\r\n            phonenumber: \"\",\r\n            adress: \"\",\r\n            mnumber: \"\",\r\n            mplace: \"\"\r\n        }); \r\n        setShowInfo(false)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        {newInfo.name} kiitos tilauksesta!\r\n        Tässä kuitti:\r\n        {products.map (product => <div>{product.name},<br></br> {product.amount}kpl,<br></br> {product.price * product.amount}€<br></br> </div>)}\r\n        <button onClick={()=>setToZeros({setProducts})}>Ok</button>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport {Result}","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Products} from './components/products';\r\nimport productslist from './components/productsdata';\r\nimport {Cart} from './components/cart';\r\nimport {Info} from './components/confirm';\r\nimport {Result} from './components/result';\r\n  const App = () => {\r\n    const [products, setProducts] = useState(productslist);\r\n    const [show, setShow] = useState(false);\r\n    const [showcart, setShowCart] = useState(false);\r\n    const [showInfo, setShowInfo] = useState(false);\r\n    const [total, setTotal] = useState(false);\r\n\r\n    let items = {\r\n      name: \"\",\r\n      email: \"\",\r\n      phonenumber: \"\",\r\n      adress: \"\",\r\n      mnumber: \"\",\r\n      mplace: \"\"\r\n  }\r\n  \r\n  const [newInfo, setNewInfo] = useState(items);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={()=>{setShow(!show); console.log(\"painettu\")}}>\r\n      {show ? \"Close Cart\" : \"Open Cart\"}\r\n      </button>\r\n      <div className=\"products\">\r\n      \r\n    \r\n    <section className=\"product\">\r\n    <Products products={products} setProducts={setProducts}/>\r\n    </section>\r\n      \r\n    \r\n    {show&&\r\n    <section className=\"cart\">\r\n    <Cart products={products} setProducts={setProducts}/>\r\n    <button onClick={()=>{setShowCart(!showcart); console.log(\"painettu\")}}>\r\n      {showcart ? \"Peruuta vahvistus\" : \"Vahvista Tilaus\"}\r\n      </button>\r\n      {showcart&&\r\n      \r\n      <section className=\"confirm\">        \r\n      <Info newInfo={newInfo} setNewInfo={setNewInfo}/>\r\n      <button onClick={()=>{setShowInfo(!showInfo); setShow(!show)}}>\r\n        {showInfo ? \"Peruuta\" : \"Hyväksy\"}\r\n      </button>\r\n      </section>\r\n\r\n\r\n  }\r\n      </section>\r\n    }\r\n        {showInfo&&\r\n      <section className=\"result\">\r\n      <Result newInfo={newInfo} setNewInfo={setNewInfo} products={products} setProducts={setProducts} setShowInfo={setShowInfo} total={total}/>\r\n      </section>\r\n    }\r\n    \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}